version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:5.0
    container_name: finance-tracker-db
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - mongodb_data:/data/db
      - ./backend/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - finance-network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: finance-tracker-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - finance-network

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: finance-tracker-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/finance-tracker?authSource=admin
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your_production_jwt_secret_here
      - AI_SERVICE_URL=http://ai-service:8000
      - CLIENT_URL=http://localhost:3000
    depends_on:
      - mongodb
      - redis
      - ai-service
    networks:
      - finance-network
    volumes:
      - ./backend:/app
      - /app/node_modules

  # AI Service
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: finance-tracker-ai
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
    networks:
      - finance-network
    volumes:
      - ./ai-service:/app

  # Frontend (optional - for production)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: finance-tracker-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
    depends_on:
      - backend
    networks:
      - finance-network

volumes:
  mongodb_data:
  redis_data:

networks:
  finance-network:
    driver: bridge